Use numpy!
RUN: {'train': 'data/sst-train.txt', 'dev': 'data/sst-dev.txt', 'test': 'data/sst-test.txt', 'emb_size': 64, 'hid_size': 64, 'hid_layer': 2, 'word_drop': 0.2, 'emb_drop': 0.333, 'hid_drop': 0.333, 'pooling_method': 'max', 'iters': 20, 'lrate': 0.02, 'lrate_decay': 1.0, 'mrate': 0.85, 'accu_step': 16, 'model': 'model5.npz', 'do_gradient_check': 0, 'dev_output': 'output.dev.txt', 'test_output': 'output.test.txt'}
iter 0: train loss/sent=1.5736, time=188.52s
iter 0: dev acc=0.2625; best=Iter0(0.2625)
iter 1: train loss/sent=1.5713, time=183.82s
iter 1: dev acc=0.2534; best=Iter0(0.2625)
iter 2: train loss/sent=1.5704, time=189.35s
iter 2: dev acc=0.2625; best=Iter0(0.2625)
iter 3: train loss/sent=1.5699, time=186.64s
iter 3: dev acc=0.2534; best=Iter0(0.2625)
iter 4: train loss/sent=1.5714, time=186.13s
iter 4: dev acc=0.2743; best=Iter4(0.2743)
iter 5: train loss/sent=1.5702, time=183.97s
iter 5: dev acc=0.2534; best=Iter4(0.2743)
iter 6: train loss/sent=1.5707, time=186.17s
iter 6: dev acc=0.2534; best=Iter4(0.2743)
iter 7: train loss/sent=1.5709, time=187.93s
iter 7: dev acc=0.2534; best=Iter4(0.2743)
iter 8: train loss/sent=1.5697, time=189.98s
iter 8: dev acc=0.2525; best=Iter4(0.2743)
iter 9: train loss/sent=1.5705, time=192.38s
iter 9: dev acc=0.2534; best=Iter4(0.2743)
iter 10: train loss/sent=1.5696, time=189.86s
iter 10: dev acc=0.2661; best=Iter4(0.2743)
iter 11: train loss/sent=1.5707, time=190.94s
iter 11: dev acc=0.2534; best=Iter4(0.2743)
iter 12: train loss/sent=1.5696, time=191.12s
iter 12: dev acc=0.2534; best=Iter4(0.2743)
iter 13: train loss/sent=1.5696, time=190.57s
iter 13: dev acc=0.2534; best=Iter4(0.2743)
iter 14: train loss/sent=1.5701, time=189.44s
iter 14: dev acc=0.2534; best=Iter4(0.2743)
iter 15: train loss/sent=1.5696, time=189.07s
iter 15: dev acc=0.2698; best=Iter4(0.2743)
iter 16: train loss/sent=1.5695, time=187.94s
iter 16: dev acc=0.2534; best=Iter4(0.2743)
iter 17: train loss/sent=1.5688, time=187.23s
iter 17: dev acc=0.2534; best=Iter4(0.2743)
iter 18: train loss/sent=1.5688, time=185.28s
iter 18: dev acc=0.2534; best=Iter4(0.2743)
iter 19: train loss/sent=1.5694, time=185.23s
iter 19: dev acc=0.2534; best=Iter4(0.2743)
iter None: dev acc=0.2743
iter None: test acc=0.2548
Use numpy!
RUN: {'train': 'data/sst-train.txt', 'dev': 'data/sst-dev.txt', 'test': 'data/sst-test.txt', 'emb_size': 64, 'hid_size': 64, 'hid_layer': 2, 'word_drop': 0.2, 'emb_drop': 0.333, 'hid_drop': 0.333, 'pooling_method': 'max', 'iters': 20, 'lrate': 0.015, 'lrate_decay': 1.0, 'mrate': 0.9, 'accu_step': 10, 'model': 'model6.npz', 'do_gradient_check': 0, 'dev_output': 'output.dev.txt', 'test_output': 'output.test.txt'}
iter 0: train loss/sent=1.5737, time=192.99s
iter 0: dev acc=0.2625; best=Iter0(0.2625)
iter 1: train loss/sent=1.5716, time=188.62s
iter 1: dev acc=0.2534; best=Iter0(0.2625)
iter 2: train loss/sent=1.5706, time=191.80s
iter 2: dev acc=0.2625; best=Iter0(0.2625)
iter 3: train loss/sent=1.5701, time=188.07s
iter 3: dev acc=0.2534; best=Iter0(0.2625)
iter 4: train loss/sent=1.5716, time=187.79s
iter 4: dev acc=0.2861; best=Iter4(0.2861)
iter 5: train loss/sent=1.5704, time=183.09s
iter 5: dev acc=0.2534; best=Iter4(0.2861)
iter 6: train loss/sent=1.5709, time=188.95s
iter 6: dev acc=0.2534; best=Iter4(0.2861)
iter 7: train loss/sent=1.5710, time=191.50s
iter 7: dev acc=0.2534; best=Iter4(0.2861)
iter 8: train loss/sent=1.5699, time=190.67s
iter 8: dev acc=0.2561; best=Iter4(0.2861)
iter 9: train loss/sent=1.5706, time=192.63s
iter 9: dev acc=0.2534; best=Iter4(0.2861)
iter 10: train loss/sent=1.5697, time=192.12s
iter 10: dev acc=0.2643; best=Iter4(0.2861)
iter 11: train loss/sent=1.5708, time=189.90s
iter 11: dev acc=0.2534; best=Iter4(0.2861)
iter 12: train loss/sent=1.5697, time=192.06s
iter 12: dev acc=0.2534; best=Iter4(0.2861)
iter 13: train loss/sent=1.5697, time=189.70s
iter 13: dev acc=0.2534; best=Iter4(0.2861)
iter 14: train loss/sent=1.5701, time=191.29s
iter 14: dev acc=0.2534; best=Iter4(0.2861)
iter 15: train loss/sent=1.5696, time=191.22s
iter 15: dev acc=0.2679; best=Iter4(0.2861)
iter 16: train loss/sent=1.5696, time=187.77s
iter 16: dev acc=0.2534; best=Iter4(0.2861)
iter 17: train loss/sent=1.5688, time=188.52s
iter 17: dev acc=0.2534; best=Iter4(0.2861)
iter 18: train loss/sent=1.5688, time=185.86s
iter 18: dev acc=0.2534; best=Iter4(0.2861)
iter 19: train loss/sent=1.5695, time=186.63s
iter 19: dev acc=0.2534; best=Iter4(0.2861)
iter None: dev acc=0.2861
iter None: test acc=0.2638
Use numpy!
RUN: {'train': 'data/sst-train.txt', 'dev': 'data/sst-dev.txt', 'test': 'data/sst-test.txt', 'emb_size': 64, 'hid_size': 64, 'hid_layer': 2, 'word_drop': 0.2, 'emb_drop': 0.333, 'hid_drop': 0.333, 'pooling_method': 'max', 'iters': 20, 'lrate': 0.015, 'lrate_decay': 1.0, 'mrate': 0.85, 'accu_step': 10, 'model': 'model3.npz', 'do_gradient_check': 0, 'dev_output': 'output.dev.txt', 'test_output': 'output.test.txt'}
iter 0: train loss/sent=1.5735, time=185.08s
iter 0: dev acc=0.2625; best=Iter0(0.2625)
iter 1: train loss/sent=1.5716, time=185.83s
iter 1: dev acc=0.2534; best=Iter0(0.2625)
iter 2: train loss/sent=1.5706, time=189.29s
iter 2: dev acc=0.2625; best=Iter0(0.2625)
iter 3: train loss/sent=1.5701, time=188.11s
iter 3: dev acc=0.2534; best=Iter0(0.2625)
iter 4: train loss/sent=1.5716, time=189.24s
iter 4: dev acc=0.2779; best=Iter4(0.2779)
iter 5: train loss/sent=1.5705, time=184.81s
iter 5: dev acc=0.2534; best=Iter4(0.2779)
iter 6: train loss/sent=1.5708, time=189.43s
iter 6: dev acc=0.2534; best=Iter4(0.2779)
iter 7: train loss/sent=1.5710, time=189.73s
iter 7: dev acc=0.2534; best=Iter4(0.2779)
iter 8: train loss/sent=1.5699, time=191.28s
iter 8: dev acc=0.2716; best=Iter4(0.2779)
iter 9: train loss/sent=1.5706, time=193.48s
iter 9: dev acc=0.2534; best=Iter4(0.2779)
iter 10: train loss/sent=1.5697, time=192.73s
iter 10: dev acc=0.2652; best=Iter4(0.2779)
iter 11: train loss/sent=1.5707, time=191.35s
iter 11: dev acc=0.2534; best=Iter4(0.2779)
iter 12: train loss/sent=1.5697, time=194.59s
iter 12: dev acc=0.2534; best=Iter4(0.2779)
iter 13: train loss/sent=1.5696, time=189.89s
iter 13: dev acc=0.2534; best=Iter4(0.2779)
iter 14: train loss/sent=1.5702, time=192.81s
iter 14: dev acc=0.2534; best=Iter4(0.2779)
iter 15: train loss/sent=1.5697, time=190.57s
iter 15: dev acc=0.2670; best=Iter4(0.2779)
iter 16: train loss/sent=1.5695, time=191.56s
iter 16: dev acc=0.2534; best=Iter4(0.2779)
iter 17: train loss/sent=1.5688, time=189.54s
iter 17: dev acc=0.2534; best=Iter4(0.2779)
iter 18: train loss/sent=1.5687, time=186.83s
iter 18: dev acc=0.2534; best=Iter4(0.2779)
iter 19: train loss/sent=1.5695, time=186.50s
iter 19: dev acc=0.2534; best=Iter4(0.2779)
iter None: dev acc=0.2779
iter None: test acc=0.2674
Use numpy!
RUN: {'train': 'data/sst-train.txt', 'dev': 'data/sst-dev.txt', 'test': 'data/sst-test.txt', 'emb_size': 64, 'hid_size': 64, 'hid_layer': 2, 'word_drop': 0.2, 'emb_drop': 0.333, 'hid_drop': 0.333, 'pooling_method': 'max', 'iters': 20, 'lrate': 0.01, 'lrate_decay': 1.0, 'mrate': 0.85, 'accu_step': 10, 'model': 'model4.npz', 'do_gradient_check': 0, 'dev_output': 'output.dev.txt', 'test_output': 'output.test.txt'}
iter 0: train loss/sent=1.5735, time=188.03s
iter 0: dev acc=0.2625; best=Iter0(0.2625)
iter 1: train loss/sent=1.5710, time=182.56s
iter 1: dev acc=0.2534; best=Iter0(0.2625)
iter 2: train loss/sent=1.5703, time=189.01s
iter 2: dev acc=0.2625; best=Iter0(0.2625)
iter 3: train loss/sent=1.5697, time=190.85s
iter 3: dev acc=0.2534; best=Iter0(0.2625)
iter 4: train loss/sent=1.5712, time=187.81s
iter 4: dev acc=0.2698; best=Iter4(0.2698)
iter 5: train loss/sent=1.5701, time=187.71s
iter 5: dev acc=0.2543; best=Iter4(0.2698)
iter 6: train loss/sent=1.5704, time=189.48s
iter 6: dev acc=0.2534; best=Iter4(0.2698)
iter 7: train loss/sent=1.5707, time=194.39s
iter 7: dev acc=0.2534; best=Iter4(0.2698)
iter 8: train loss/sent=1.5695, time=191.98s
iter 8: dev acc=0.2525; best=Iter4(0.2698)
iter 9: train loss/sent=1.5702, time=194.36s
iter 9: dev acc=0.2543; best=Iter4(0.2698)
iter 10: train loss/sent=1.5693, time=194.92s
iter 10: dev acc=0.2670; best=Iter4(0.2698)
iter 11: train loss/sent=1.5705, time=193.15s
iter 11: dev acc=0.2534; best=Iter4(0.2698)
iter 12: train loss/sent=1.5693, time=194.26s
iter 12: dev acc=0.2534; best=Iter4(0.2698)
iter 13: train loss/sent=1.5692, time=193.77s
iter 13: dev acc=0.2534; best=Iter4(0.2698)
iter 14: train loss/sent=1.5700, time=195.76s
iter 14: dev acc=0.2534; best=Iter4(0.2698)
iter 15: train loss/sent=1.5695, time=194.16s
iter 15: dev acc=0.2807; best=Iter15(0.2807)
iter 16: train loss/sent=1.5692, time=190.52s
iter 16: dev acc=0.2534; best=Iter15(0.2807)
iter 17: train loss/sent=1.5685, time=189.95s
iter 17: dev acc=0.2534; best=Iter15(0.2807)
iter 18: train loss/sent=1.5688, time=189.19s
iter 18: dev acc=0.2534; best=Iter15(0.2807)
iter 19: train loss/sent=1.5691, time=187.64s
iter 19: dev acc=0.2534; best=Iter15(0.2807)
iter None: dev acc=0.2807
iter None: test acc=0.2584
Use numpy!
RUN: {'train': 'data/sst-train.txt', 'dev': 'data/sst-dev.txt', 'test': 'data/sst-test.txt', 'emb_size': 64, 'hid_size': 64, 'hid_layer': 2, 'word_drop': 0.2, 'emb_drop': 0.333, 'hid_drop': 0.333, 'pooling_method': 'max', 'iters': 20, 'lrate': 0.01, 'lrate_decay': 1.0, 'mrate': 0.85, 'accu_step': 4, 'model': 'model7.npz', 'do_gradient_check': 0, 'dev_output': 'output.dev.txt', 'test_output': 'output.test.txt'}
iter 0: train loss/sent=1.5742, time=222.63s
iter 0: dev acc=0.2625; best=Iter0(0.2625)
iter 1: train loss/sent=1.5730, time=214.52s
iter 1: dev acc=0.2534; best=Iter0(0.2625)
iter 2: train loss/sent=1.5714, time=216.40s
iter 2: dev acc=0.2625; best=Iter0(0.2625)
iter 3: train loss/sent=1.5709, time=213.10s
iter 3: dev acc=0.2534; best=Iter0(0.2625)
iter 4: train loss/sent=1.5722, time=213.27s
iter 4: dev acc=0.2643; best=Iter4(0.2643)
iter 5: train loss/sent=1.5712, time=213.09s
iter 5: dev acc=0.2543; best=Iter4(0.2643)
iter 6: train loss/sent=1.5711, time=219.89s
iter 6: dev acc=0.2534; best=Iter4(0.2643)
iter 7: train loss/sent=1.5712, time=218.70s
iter 7: dev acc=0.2534; best=Iter4(0.2643)
iter 8: train loss/sent=1.5705, time=220.51s
iter 8: dev acc=0.2870; best=Iter8(0.2870)
iter 9: train loss/sent=1.5709, time=218.34s
iter 9: dev acc=0.2616; best=Iter8(0.2870)
iter 10: train loss/sent=1.5700, time=219.57s
iter 10: dev acc=0.2761; best=Iter8(0.2870)
iter 11: train loss/sent=1.5707, time=218.06s
iter 11: dev acc=0.2534; best=Iter8(0.2870)
iter 12: train loss/sent=1.5700, time=217.68s
iter 12: dev acc=0.2534; best=Iter8(0.2870)
iter 13: train loss/sent=1.5696, time=218.90s
iter 13: dev acc=0.2534; best=Iter8(0.2870)
iter 14: train loss/sent=1.5703, time=217.16s
iter 14: dev acc=0.2534; best=Iter8(0.2870)
iter 15: train loss/sent=1.5699, time=215.60s
iter 15: dev acc=0.2625; best=Iter8(0.2870)
iter 16: train loss/sent=1.5698, time=213.14s
iter 16: dev acc=0.2534; best=Iter8(0.2870)
iter 17: train loss/sent=1.5688, time=209.65s
iter 17: dev acc=0.2534; best=Iter8(0.2870)
iter 18: train loss/sent=1.5686, time=211.67s
iter 18: dev acc=0.2534; best=Iter8(0.2870)
iter 19: train loss/sent=1.5696, time=212.54s
iter 19: dev acc=0.2534; best=Iter8(0.2870)
iter None: dev acc=0.2870
iter None: test acc=0.2480
Use numpy!
RUN: {'train': 'data/sst-train.txt', 'dev': 'data/sst-dev.txt', 'test': 'data/sst-test.txt', 'emb_size': 64, 'hid_size': 64, 'hid_layer': 2, 'word_drop': 0.2, 'emb_drop': 0.333, 'hid_drop': 0.333, 'pooling_method': 'max', 'iters': 20, 'lrate': 0.015, 'lrate_decay': 1.0, 'mrate': 0.9, 'accu_step': 1, 'model': 'model2.npz', 'do_gradient_check': 0, 'dev_output': 'output.dev.txt', 'test_output': 'output.test.txt'}
iter 0: train loss/sent=1.5834, time=345.32s
iter 0: dev acc=0.2625; best=Iter0(0.2625)
iter 1: train loss/sent=1.5763, time=346.69s
iter 1: dev acc=0.2534; best=Iter0(0.2625)
iter 2: train loss/sent=1.5736, time=343.39s
iter 2: dev acc=0.2625; best=Iter0(0.2625)
iter 3: train loss/sent=1.5728, time=347.64s
iter 3: dev acc=0.2534; best=Iter0(0.2625)
iter 4: train loss/sent=1.5727, time=352.96s
iter 4: dev acc=0.2625; best=Iter0(0.2625)
iter 5: train loss/sent=1.5728, time=351.73s
iter 5: dev acc=0.2861; best=Iter5(0.2861)
iter 6: train loss/sent=1.5720, time=355.19s
iter 6: dev acc=0.2534; best=Iter5(0.2861)
iter 7: train loss/sent=1.5720, time=356.04s
iter 7: dev acc=0.2534; best=Iter5(0.2861)
iter 8: train loss/sent=1.5718, time=352.41s
iter 8: dev acc=0.2625; best=Iter5(0.2861)
iter 9: train loss/sent=1.5720, time=349.16s
iter 9: dev acc=0.2625; best=Iter5(0.2861)
iter 10: train loss/sent=1.5717, time=345.42s
iter 10: dev acc=0.2652; best=Iter5(0.2861)
iter 11: train loss/sent=1.5713, time=344.45s
iter 11: dev acc=0.2534; best=Iter5(0.2861)
iter 12: train loss/sent=1.5718, time=342.13s
iter 12: dev acc=0.2534; best=Iter5(0.2861)
iter 13: train loss/sent=1.5713, time=344.08s
iter 13: dev acc=0.2534; best=Iter5(0.2861)
iter 14: train loss/sent=1.5716, time=346.36s
iter 14: dev acc=0.2534; best=Iter5(0.2861)
iter 15: train loss/sent=1.5719, time=349.25s
iter 15: dev acc=0.2625; best=Iter5(0.2861)
iter 16: train loss/sent=1.5721, time=346.99s
iter 16: dev acc=0.2534; best=Iter5(0.2861)
iter 17: train loss/sent=1.5710, time=342.20s
iter 17: dev acc=0.2534; best=Iter5(0.2861)
iter 18: train loss/sent=1.5715, time=343.08s
iter 18: dev acc=0.2534; best=Iter5(0.2861)
iter 19: train loss/sent=1.5717, time=345.20s
iter 19: dev acc=0.2534; best=Iter5(0.2861)
iter None: dev acc=0.2861
iter None: test acc=0.2692
Use numpy!
RUN: {'train': 'data/sst-train.txt', 'dev': 'data/sst-dev.txt', 'test': 'data/sst-test.txt', 'emb_size': 64, 'hid_size': 64, 'hid_layer': 2, 'word_drop': 0.2, 'emb_drop': 0.333, 'hid_drop': 0.333, 'pooling_method': 'max', 'iters': 20, 'lrate': 0.01, 'lrate_decay': 1.0, 'mrate': 0.9, 'accu_step': 1, 'model': 'model1.npz', 'do_gradient_check': 0, 'dev_output': 'output.dev.txt', 'test_output': 'output.test.txt'}
iter 0: train loss/sent=1.5809, time=336.33s
iter 0: dev acc=0.2625; best=Iter0(0.2625)
iter 1: train loss/sent=1.5765, time=347.95s
iter 1: dev acc=0.2534; best=Iter0(0.2625)
iter 2: train loss/sent=1.5732, time=347.48s
iter 2: dev acc=0.2625; best=Iter0(0.2625)
iter 3: train loss/sent=1.5722, time=346.04s
iter 3: dev acc=0.2534; best=Iter0(0.2625)
iter 4: train loss/sent=1.5725, time=354.62s
iter 4: dev acc=0.2625; best=Iter0(0.2625)
iter 5: train loss/sent=1.5720, time=357.89s
iter 5: dev acc=0.2525; best=Iter0(0.2625)
iter 6: train loss/sent=1.5711, time=356.56s
iter 6: dev acc=0.2534; best=Iter0(0.2625)
iter 7: train loss/sent=1.5714, time=357.76s
iter 7: dev acc=0.2534; best=Iter0(0.2625)
iter 8: train loss/sent=1.5709, time=352.88s
iter 8: dev acc=0.2797; best=Iter8(0.2797)
iter 9: train loss/sent=1.5710, time=349.99s
iter 9: dev acc=0.2843; best=Iter9(0.2843)
iter 10: train loss/sent=1.5707, time=347.03s
iter 10: dev acc=0.2625; best=Iter9(0.2843)
iter 11: train loss/sent=1.5701, time=342.35s
iter 11: dev acc=0.2534; best=Iter9(0.2843)
iter 12: train loss/sent=1.5706, time=344.75s
iter 12: dev acc=0.2534; best=Iter9(0.2843)
iter 13: train loss/sent=1.5703, time=345.68s
iter 13: dev acc=0.2534; best=Iter9(0.2843)
iter 14: train loss/sent=1.5705, time=346.68s
iter 14: dev acc=0.2534; best=Iter9(0.2843)
iter 15: train loss/sent=1.5705, time=347.82s
iter 15: dev acc=0.2625; best=Iter9(0.2843)
iter 16: train loss/sent=1.5705, time=346.21s
iter 16: dev acc=0.2534; best=Iter9(0.2843)
iter 17: train loss/sent=1.5699, time=345.84s
iter 17: dev acc=0.2534; best=Iter9(0.2843)
iter 18: train loss/sent=1.5701, time=343.71s
iter 18: dev acc=0.2534; best=Iter9(0.2843)
iter 19: train loss/sent=1.5706, time=347.05s
iter 19: dev acc=0.2534; best=Iter9(0.2843)
iter None: dev acc=0.2843
iter None: test acc=0.2584
Use numpy!
RUN: {'train': 'data/sst-train.txt', 'dev': 'data/sst-dev.txt', 'test': 'data/sst-test.txt', 'emb_size': 64, 'hid_size': 64, 'hid_layer': 2, 'word_drop': 0.2, 'emb_drop': 0.333, 'hid_drop': 0.333, 'pooling_method': 'max', 'iters': 20, 'lrate': 0.015, 'lrate_decay': 1.0, 'mrate': 0.85, 'accu_step': 1, 'model': 'model0.npz', 'do_gradient_check': 0, 'dev_output': 'output.dev.txt', 'test_output': 'output.test.txt'}
iter 0: train loss/sent=1.5837, time=346.49s
iter 0: dev acc=0.2625; best=Iter0(0.2625)
iter 1: train loss/sent=1.5764, time=353.91s
iter 1: dev acc=0.2534; best=Iter0(0.2625)
iter 2: train loss/sent=1.5736, time=354.09s
iter 2: dev acc=0.2625; best=Iter0(0.2625)
iter 3: train loss/sent=1.5728, time=359.80s
iter 3: dev acc=0.2534; best=Iter0(0.2625)
iter 4: train loss/sent=1.5727, time=363.27s
iter 4: dev acc=0.2625; best=Iter0(0.2625)
iter 5: train loss/sent=1.5728, time=365.29s
iter 5: dev acc=0.2843; best=Iter5(0.2843)
iter 6: train loss/sent=1.5720, time=363.23s
iter 6: dev acc=0.2534; best=Iter5(0.2843)
iter 7: train loss/sent=1.5719, time=364.45s
iter 7: dev acc=0.2534; best=Iter5(0.2843)
iter 8: train loss/sent=1.5719, time=362.39s
iter 8: dev acc=0.2570; best=Iter5(0.2843)
iter 9: train loss/sent=1.5720, time=356.53s
iter 9: dev acc=0.2625; best=Iter5(0.2843)
iter 10: train loss/sent=1.5717, time=350.48s
iter 10: dev acc=0.2761; best=Iter5(0.2843)
iter 11: train loss/sent=1.5712, time=354.59s
iter 11: dev acc=0.2534; best=Iter5(0.2843)
iter 12: train loss/sent=1.5718, time=352.14s
iter 12: dev acc=0.2534; best=Iter5(0.2843)
iter 13: train loss/sent=1.5714, time=351.82s
iter 13: dev acc=0.2534; best=Iter5(0.2843)
iter 14: train loss/sent=1.5716, time=356.39s
iter 14: dev acc=0.2534; best=Iter5(0.2843)
iter 15: train loss/sent=1.5719, time=357.84s
iter 15: dev acc=0.2625; best=Iter5(0.2843)
iter 16: train loss/sent=1.5721, time=353.07s
iter 16: dev acc=0.2534; best=Iter5(0.2843)
iter 17: train loss/sent=1.5711, time=355.22s
iter 17: dev acc=0.2534; best=Iter5(0.2843)
iter 18: train loss/sent=1.5715, time=350.17s
iter 18: dev acc=0.2534; best=Iter5(0.2843)
iter 19: train loss/sent=1.5717, time=394.52s
iter 19: dev acc=0.2534; best=Iter5(0.2843)
iter None: dev acc=0.2843
iter None: test acc=0.2688
Use numpy!
RUN: {'train': 'data/sst-train.txt', 'dev': 'data/sst-dev.txt', 'test': 'data/sst-test.txt', 'emb_size': 64, 'hid_size': 64, 'hid_layer': 2, 'word_drop': 0.2, 'emb_drop': 0.333, 'hid_drop': 0.333, 'pooling_method': 'max', 'iters': 20, 'lrate': 0.02, 'lrate_decay': 1.0, 'mrate': 0.9, 'accu_step': 16, 'model': 'model10.npz', 'do_gradient_check': 0, 'dev_output': 'output.dev.txt', 'test_output': 'output.test.txt'}
iter 0: train loss/sent=1.5738, time=185.50s
iter 0: dev acc=0.2625; best=Iter0(0.2625)
iter 1: train loss/sent=1.5713, time=181.00s
iter 1: dev acc=0.2534; best=Iter0(0.2625)
iter 2: train loss/sent=1.5703, time=178.81s
iter 2: dev acc=0.2625; best=Iter0(0.2625)
iter 3: train loss/sent=1.5700, time=180.43s
iter 3: dev acc=0.2534; best=Iter0(0.2625)
iter 4: train loss/sent=1.5714, time=177.59s
iter 4: dev acc=0.2698; best=Iter4(0.2698)
iter 5: train loss/sent=1.5701, time=178.72s
iter 5: dev acc=0.2534; best=Iter4(0.2698)
iter 6: train loss/sent=1.5706, time=180.11s
iter 6: dev acc=0.2534; best=Iter4(0.2698)
iter 7: train loss/sent=1.5709, time=181.57s
iter 7: dev acc=0.2534; best=Iter4(0.2698)
iter 8: train loss/sent=1.5698, time=181.93s
iter 8: dev acc=0.2534; best=Iter4(0.2698)
iter 9: train loss/sent=1.5704, time=179.82s
iter 9: dev acc=0.2534; best=Iter4(0.2698)
iter 10: train loss/sent=1.5695, time=179.68s
iter 10: dev acc=0.2688; best=Iter4(0.2698)
iter 11: train loss/sent=1.5707, time=179.23s
iter 11: dev acc=0.2534; best=Iter4(0.2698)
iter 12: train loss/sent=1.5695, time=177.37s
iter 12: dev acc=0.2534; best=Iter4(0.2698)
iter 13: train loss/sent=1.5697, time=181.52s
iter 13: dev acc=0.2534; best=Iter4(0.2698)
iter 14: train loss/sent=1.5700, time=180.19s
iter 14: dev acc=0.2534; best=Iter4(0.2698)
iter 15: train loss/sent=1.5695, time=178.29s
iter 15: dev acc=0.2761; best=Iter15(0.2761)
iter 16: train loss/sent=1.5695, time=179.35s
iter 16: dev acc=0.2534; best=Iter15(0.2761)
iter 17: train loss/sent=1.5689, time=177.80s
iter 17: dev acc=0.2534; best=Iter15(0.2761)
iter 18: train loss/sent=1.5688, time=175.43s
iter 18: dev acc=0.2534; best=Iter15(0.2761)
iter 19: train loss/sent=1.5694, time=173.68s
iter 19: dev acc=0.2534; best=Iter15(0.2761)
iter None: dev acc=0.2761
iter None: test acc=0.2620
Use numpy!
RUN: {'train': 'data/sst-train.txt', 'dev': 'data/sst-dev.txt', 'test': 'data/sst-test.txt', 'emb_size': 64, 'hid_size': 64, 'hid_layer': 2, 'word_drop': 0.2, 'emb_drop': 0.333, 'hid_drop': 0.333, 'pooling_method': 'max', 'iters': 20, 'lrate': 0.015, 'lrate_decay': 1.0, 'mrate': 0.9, 'accu_step': 16, 'model': 'model9.npz', 'do_gradient_check': 0, 'dev_output': 'output.dev.txt', 'test_output': 'output.test.txt'}
iter 0: train loss/sent=1.5739, time=185.07s
iter 0: dev acc=0.2625; best=Iter0(0.2625)
iter 1: train loss/sent=1.5709, time=180.69s
iter 1: dev acc=0.2534; best=Iter0(0.2625)
iter 2: train loss/sent=1.5702, time=181.17s
iter 2: dev acc=0.2625; best=Iter0(0.2625)
iter 3: train loss/sent=1.5697, time=179.48s
iter 3: dev acc=0.2534; best=Iter0(0.2625)
iter 4: train loss/sent=1.5712, time=179.89s
iter 4: dev acc=0.2570; best=Iter0(0.2625)
iter 5: train loss/sent=1.5699, time=178.86s
iter 5: dev acc=0.2543; best=Iter0(0.2625)
iter 6: train loss/sent=1.5703, time=179.49s
iter 6: dev acc=0.2534; best=Iter0(0.2625)
iter 7: train loss/sent=1.5707, time=181.19s
iter 7: dev acc=0.2534; best=Iter0(0.2625)
iter 8: train loss/sent=1.5695, time=182.53s
iter 8: dev acc=0.2543; best=Iter0(0.2625)
iter 9: train loss/sent=1.5701, time=180.23s
iter 9: dev acc=0.2534; best=Iter0(0.2625)
iter 10: train loss/sent=1.5693, time=182.10s
iter 10: dev acc=0.2688; best=Iter10(0.2688)
iter 11: train loss/sent=1.5705, time=181.34s
iter 11: dev acc=0.2534; best=Iter10(0.2688)
iter 12: train loss/sent=1.5693, time=180.39s
iter 12: dev acc=0.2534; best=Iter10(0.2688)
iter 13: train loss/sent=1.5694, time=180.23s
iter 13: dev acc=0.2534; best=Iter10(0.2688)
iter 14: train loss/sent=1.5699, time=179.37s
iter 14: dev acc=0.2534; best=Iter10(0.2688)
iter 15: train loss/sent=1.5694, time=178.71s
iter 15: dev acc=0.2516; best=Iter10(0.2688)
iter 16: train loss/sent=1.5693, time=180.50s
iter 16: dev acc=0.2534; best=Iter10(0.2688)
iter 17: train loss/sent=1.5686, time=178.31s
iter 17: dev acc=0.2534; best=Iter10(0.2688)
iter 18: train loss/sent=1.5688, time=177.50s
iter 18: dev acc=0.2534; best=Iter10(0.2688)
iter 19: train loss/sent=1.5691, time=176.65s
iter 19: dev acc=0.2534; best=Iter10(0.2688)
iter None: dev acc=0.2688
iter None: test acc=0.2792
Use numpy!
RUN: {'train': 'data/sst-train.txt', 'dev': 'data/sst-dev.txt', 'test': 'data/sst-test.txt', 'emb_size': 64, 'hid_size': 64, 'hid_layer': 2, 'word_drop': 0.2, 'emb_drop': 0.333, 'hid_drop': 0.333, 'pooling_method': 'max', 'iters': 20, 'lrate': 0.01, 'lrate_decay': 1.0, 'mrate': 0.85, 'accu_step': 16, 'model': 'model12.npz', 'do_gradient_check': 0, 'dev_output': 'output.dev.txt', 'test_output': 'output.test.txt'}
iter 0: train loss/sent=1.5743, time=193.85s
iter 0: dev acc=0.2634; best=Iter0(0.2634)
iter 1: train loss/sent=1.5706, time=189.86s
iter 1: dev acc=0.2534; best=Iter0(0.2634)
iter 2: train loss/sent=1.5702, time=188.83s
iter 2: dev acc=0.2625; best=Iter0(0.2634)
iter 3: train loss/sent=1.5694, time=184.59s
iter 3: dev acc=0.2534; best=Iter0(0.2634)
iter 4: train loss/sent=1.5709, time=184.48s
iter 4: dev acc=0.2561; best=Iter0(0.2634)
iter 5: train loss/sent=1.5699, time=183.42s
iter 5: dev acc=0.2543; best=Iter0(0.2634)
iter 6: train loss/sent=1.5702, time=184.83s
iter 6: dev acc=0.2534; best=Iter0(0.2634)
iter 7: train loss/sent=1.5706, time=182.31s
iter 7: dev acc=0.2534; best=Iter0(0.2634)
iter 8: train loss/sent=1.5692, time=181.25s
iter 8: dev acc=0.2552; best=Iter0(0.2634)
iter 9: train loss/sent=1.5699, time=180.93s
iter 9: dev acc=0.2534; best=Iter0(0.2634)
iter 10: train loss/sent=1.5690, time=182.79s
iter 10: dev acc=0.2688; best=Iter10(0.2688)
iter 11: train loss/sent=1.5704, time=180.27s
iter 11: dev acc=0.2534; best=Iter10(0.2688)
iter 12: train loss/sent=1.5691, time=182.76s
iter 12: dev acc=0.2534; best=Iter10(0.2688)
iter 13: train loss/sent=1.5691, time=186.05s
iter 13: dev acc=0.2543; best=Iter10(0.2688)
iter 14: train loss/sent=1.5698, time=176.78s
iter 14: dev acc=0.2516; best=Iter10(0.2688)
iter 15: train loss/sent=1.5694, time=178.73s
iter 15: dev acc=0.2516; best=Iter10(0.2688)
iter 16: train loss/sent=1.5690, time=177.68s
iter 16: dev acc=0.2534; best=Iter10(0.2688)
iter 17: train loss/sent=1.5683, time=180.33s
iter 17: dev acc=0.2534; best=Iter10(0.2688)
iter 18: train loss/sent=1.5689, time=181.04s
iter 18: dev acc=0.2534; best=Iter10(0.2688)
iter 19: train loss/sent=1.5688, time=182.66s
iter 19: dev acc=0.2534; best=Iter10(0.2688)
iter None: dev acc=0.2688
iter None: test acc=0.2796
Use numpy!
RUN: {'train': 'data/sst-train.txt', 'dev': 'data/sst-dev.txt', 'test': 'data/sst-test.txt', 'emb_size': 64, 'hid_size': 64, 'hid_layer': 2, 'word_drop': 0.2, 'emb_drop': 0.333, 'hid_drop': 0.333, 'pooling_method': 'max', 'iters': 20, 'lrate': 0.015, 'lrate_decay': 1.0, 'mrate': 0.9, 'accu_step': 4, 'model': 'model11.npz', 'do_gradient_check': 0, 'dev_output': 'output.dev.txt', 'test_output': 'output.test.txt'}
iter 0: train loss/sent=1.5754, time=226.68s
iter 0: dev acc=0.2625; best=Iter0(0.2625)
iter 1: train loss/sent=1.5741, time=219.95s
iter 1: dev acc=0.2534; best=Iter0(0.2625)
iter 2: train loss/sent=1.5721, time=216.69s
iter 2: dev acc=0.2625; best=Iter0(0.2625)
iter 3: train loss/sent=1.5717, time=218.09s
iter 3: dev acc=0.2534; best=Iter0(0.2625)
iter 4: train loss/sent=1.5727, time=214.86s
iter 4: dev acc=0.2616; best=Iter0(0.2625)
iter 5: train loss/sent=1.5717, time=217.75s
iter 5: dev acc=0.2534; best=Iter0(0.2625)
iter 6: train loss/sent=1.5717, time=218.81s
iter 6: dev acc=0.2534; best=Iter0(0.2625)
iter 7: train loss/sent=1.5715, time=222.32s
iter 7: dev acc=0.2534; best=Iter0(0.2625)
iter 8: train loss/sent=1.5706, time=218.65s
iter 8: dev acc=0.2770; best=Iter8(0.2770)
iter 9: train loss/sent=1.5710, time=216.61s
iter 9: dev acc=0.2534; best=Iter8(0.2770)
iter 10: train loss/sent=1.5703, time=214.64s
iter 10: dev acc=0.2625; best=Iter8(0.2770)
iter 11: train loss/sent=1.5707, time=218.33s
iter 11: dev acc=0.2534; best=Iter8(0.2770)
iter 12: train loss/sent=1.5701, time=218.51s
iter 12: dev acc=0.2534; best=Iter8(0.2770)
iter 13: train loss/sent=1.5699, time=215.58s
iter 13: dev acc=0.2534; best=Iter8(0.2770)
iter 14: train loss/sent=1.5701, time=209.03s
iter 14: dev acc=0.2534; best=Iter8(0.2770)
iter 15: train loss/sent=1.5699, time=210.95s
iter 15: dev acc=0.2625; best=Iter8(0.2770)
iter 16: train loss/sent=1.5699, time=209.15s
iter 16: dev acc=0.2534; best=Iter8(0.2770)
iter 17: train loss/sent=1.5689, time=210.99s
iter 17: dev acc=0.2534; best=Iter8(0.2770)
iter 18: train loss/sent=1.5685, time=214.12s
iter 18: dev acc=0.2534; best=Iter8(0.2770)
iter 19: train loss/sent=1.5699, time=214.32s
iter 19: dev acc=0.2534; best=Iter8(0.2770)
iter None: dev acc=0.2770
iter None: test acc=0.2674
Use numpy!
RUN: {'train': 'data/sst-train.txt', 'dev': 'data/sst-dev.txt', 'test': 'data/sst-test.txt', 'emb_size': 64, 'hid_size': 64, 'hid_layer': 2, 'word_drop': 0.2, 'emb_drop': 0.333, 'hid_drop': 0.333, 'pooling_method': 'max', 'iters': 20, 'lrate': 0.015, 'lrate_decay': 1.0, 'mrate': 0.85, 'accu_step': 16, 'model': 'model13.npz', 'do_gradient_check': 0, 'dev_output': 'output.dev.txt', 'test_output': 'output.test.txt'}
iter 0: train loss/sent=1.5737, time=201.06s
iter 0: dev acc=0.2625; best=Iter0(0.2625)
iter 1: train loss/sent=1.5709, time=184.45s
iter 1: dev acc=0.2534; best=Iter0(0.2625)
iter 2: train loss/sent=1.5702, time=184.12s
iter 2: dev acc=0.2625; best=Iter0(0.2625)
iter 3: train loss/sent=1.5696, time=184.72s
iter 3: dev acc=0.2534; best=Iter0(0.2625)
iter 4: train loss/sent=1.5712, time=186.74s
iter 4: dev acc=0.2598; best=Iter0(0.2625)
iter 5: train loss/sent=1.5700, time=187.95s
iter 5: dev acc=0.2534; best=Iter0(0.2625)
iter 6: train loss/sent=1.5704, time=187.52s
iter 6: dev acc=0.2534; best=Iter0(0.2625)
iter 7: train loss/sent=1.5707, time=187.36s
iter 7: dev acc=0.2534; best=Iter0(0.2625)
iter 8: train loss/sent=1.5695, time=186.36s
iter 8: dev acc=0.2534; best=Iter0(0.2625)
iter 9: train loss/sent=1.5702, time=184.65s
iter 9: dev acc=0.2534; best=Iter0(0.2625)
iter 10: train loss/sent=1.5693, time=187.66s
iter 10: dev acc=0.2679; best=Iter10(0.2679)
iter 11: train loss/sent=1.5705, time=184.26s
iter 11: dev acc=0.2534; best=Iter10(0.2679)
iter 12: train loss/sent=1.5693, time=186.29s
iter 12: dev acc=0.2534; best=Iter10(0.2679)
iter 13: train loss/sent=1.5694, time=186.13s
iter 13: dev acc=0.2534; best=Iter10(0.2679)
iter 14: train loss/sent=1.5699, time=184.48s
iter 14: dev acc=0.2534; best=Iter10(0.2679)
iter 15: train loss/sent=1.5695, time=185.17s
iter 15: dev acc=0.2525; best=Iter10(0.2679)
iter 16: train loss/sent=1.5693, time=185.07s
iter 16: dev acc=0.2534; best=Iter10(0.2679)
iter 17: train loss/sent=1.5686, time=185.59s
iter 17: dev acc=0.2534; best=Iter10(0.2679)
iter 18: train loss/sent=1.5688, time=186.87s
iter 18: dev acc=0.2534; best=Iter10(0.2679)
iter 19: train loss/sent=1.5691, time=186.54s
iter 19: dev acc=0.2534; best=Iter10(0.2679)
iter None: dev acc=0.2679
iter None: test acc=0.2765
Use numpy!
RUN: {'train': 'data/sst-train.txt', 'dev': 'data/sst-dev.txt', 'test': 'data/sst-test.txt', 'emb_size': 64, 'hid_size': 64, 'hid_layer': 2, 'word_drop': 0.2, 'emb_drop': 0.333, 'hid_drop': 0.333, 'pooling_method': 'max', 'iters': 20, 'lrate': 0.02, 'lrate_decay': 1.0, 'mrate': 0.85, 'accu_step': 1, 'model': 'model8.npz', 'do_gradient_check': 0, 'dev_output': 'output.dev.txt', 'test_output': 'output.test.txt'}
iter 0: train loss/sent=1.5853, time=365.69s
iter 0: dev acc=0.2625; best=Iter0(0.2625)
iter 1: train loss/sent=1.5764, time=358.72s
iter 1: dev acc=0.2534; best=Iter0(0.2625)
iter 2: train loss/sent=1.5744, time=352.40s
iter 2: dev acc=0.2625; best=Iter0(0.2625)
iter 3: train loss/sent=1.5736, time=357.84s
iter 3: dev acc=0.2534; best=Iter0(0.2625)
iter 4: train loss/sent=1.5739, time=363.42s
iter 4: dev acc=0.2625; best=Iter0(0.2625)
iter 5: train loss/sent=1.5743, time=357.69s
iter 5: dev acc=0.2625; best=Iter0(0.2625)
iter 6: train loss/sent=1.5730, time=357.04s
iter 6: dev acc=0.2534; best=Iter0(0.2625)
iter 7: train loss/sent=1.5731, time=354.81s
iter 7: dev acc=0.2534; best=Iter0(0.2625)
iter 8: train loss/sent=1.5732, time=358.13s
iter 8: dev acc=0.2534; best=Iter0(0.2625)
iter 9: train loss/sent=1.5733, time=347.37s
iter 9: dev acc=0.2625; best=Iter0(0.2625)
iter 10: train loss/sent=1.5730, time=352.82s
iter 10: dev acc=0.2534; best=Iter0(0.2625)
iter 11: train loss/sent=1.5725, time=357.27s
iter 11: dev acc=0.2534; best=Iter0(0.2625)
iter 12: train loss/sent=1.5732, time=357.81s
iter 12: dev acc=0.2534; best=Iter0(0.2625)
iter 13: train loss/sent=1.5729, time=352.46s
iter 13: dev acc=0.2534; best=Iter0(0.2625)
iter 14: train loss/sent=1.5731, time=356.70s
iter 14: dev acc=0.2534; best=Iter0(0.2625)
iter 15: train loss/sent=1.5735, time=357.59s
iter 15: dev acc=0.2625; best=Iter0(0.2625)
iter 16: train loss/sent=1.5737, time=351.78s
iter 16: dev acc=0.2534; best=Iter0(0.2625)
iter 17: train loss/sent=1.5726, time=347.85s
iter 17: dev acc=0.2480; best=Iter0(0.2625)
iter 18: train loss/sent=1.5729, time=353.97s
iter 18: dev acc=0.2534; best=Iter0(0.2625)
iter 19: train loss/sent=1.5733, time=358.02s
iter 19: dev acc=0.2534; best=Iter0(0.2625)
iter None: dev acc=0.2625
iter None: test acc=0.2864
Use numpy!
RUN: {'train': 'data/sst-train.txt', 'dev': 'data/sst-dev.txt', 'test': 'data/sst-test.txt', 'emb_size': 64, 'hid_size': 64, 'hid_layer': 2, 'word_drop': 0.2, 'emb_drop': 0.333, 'hid_drop': 0.333, 'pooling_method': 'max', 'iters': 20, 'lrate': 0.02, 'lrate_decay': 1.0, 'mrate': 0.9, 'accu_step': 10, 'model': 'model15.npz', 'do_gradient_check': 0, 'dev_output': 'output.dev.txt', 'test_output': 'output.test.txt'}
iter 0: train loss/sent=1.5739, time=215.80s
iter 0: dev acc=0.2625; best=Iter0(0.2625)
iter 1: train loss/sent=1.5723, time=195.69s
iter 1: dev acc=0.2534; best=Iter0(0.2625)
iter 2: train loss/sent=1.5709, time=192.14s
iter 2: dev acc=0.2625; best=Iter0(0.2625)
iter 3: train loss/sent=1.5706, time=189.85s
iter 3: dev acc=0.2534; best=Iter0(0.2625)
iter 4: train loss/sent=1.5720, time=191.74s
iter 4: dev acc=0.2634; best=Iter4(0.2634)
iter 5: train loss/sent=1.5707, time=191.04s
iter 5: dev acc=0.2534; best=Iter4(0.2634)
iter 6: train loss/sent=1.5713, time=191.77s
iter 6: dev acc=0.2534; best=Iter4(0.2634)
iter 7: train loss/sent=1.5713, time=190.02s
iter 7: dev acc=0.2534; best=Iter4(0.2634)
iter 8: train loss/sent=1.5702, time=190.10s
iter 8: dev acc=0.2688; best=Iter8(0.2688)
iter 9: train loss/sent=1.5709, time=192.61s
iter 9: dev acc=0.2534; best=Iter8(0.2688)
iter 10: train loss/sent=1.5700, time=190.48s
iter 10: dev acc=0.2616; best=Iter8(0.2688)
iter 11: train loss/sent=1.5710, time=191.50s
iter 11: dev acc=0.2534; best=Iter8(0.2688)
iter 12: train loss/sent=1.5700, time=188.62s
iter 12: dev acc=0.2534; best=Iter8(0.2688)
iter 13: train loss/sent=1.5700, time=188.48s
iter 13: dev acc=0.2534; best=Iter8(0.2688)
iter 14: train loss/sent=1.5703, time=191.94s
iter 14: dev acc=0.2534; best=Iter8(0.2688)
iter 15: train loss/sent=1.5697, time=191.03s
iter 15: dev acc=0.2643; best=Iter8(0.2688)
iter 16: train loss/sent=1.5698, time=189.26s
iter 16: dev acc=0.2534; best=Iter8(0.2688)
iter 17: train loss/sent=1.5690, time=191.19s
iter 17: dev acc=0.2534; best=Iter8(0.2688)
iter 18: train loss/sent=1.5687, time=193.79s
iter 18: dev acc=0.2534; best=Iter8(0.2688)
iter 19: train loss/sent=1.5697, time=192.00s
iter 19: dev acc=0.2534; best=Iter8(0.2688)
iter None: dev acc=0.2688
iter None: test acc=0.2452
Use numpy!
RUN: {'train': 'data/sst-train.txt', 'dev': 'data/sst-dev.txt', 'test': 'data/sst-test.txt', 'emb_size': 64, 'hid_size': 64, 'hid_layer': 2, 'word_drop': 0.2, 'emb_drop': 0.333, 'hid_drop': 0.333, 'pooling_method': 'max', 'iters': 20, 'lrate': 0.01, 'lrate_decay': 1.0, 'mrate': 0.9, 'accu_step': 16, 'model': 'model17.npz', 'do_gradient_check': 0, 'dev_output': 'output.dev.txt', 'test_output': 'output.test.txt'}
iter 0: train loss/sent=1.5745, time=191.94s
iter 0: dev acc=0.2670; best=Iter0(0.2670)
iter 1: train loss/sent=1.5706, time=184.13s
iter 1: dev acc=0.2534; best=Iter0(0.2670)
iter 2: train loss/sent=1.5702, time=183.27s
iter 2: dev acc=0.2625; best=Iter0(0.2670)
iter 3: train loss/sent=1.5694, time=184.05s
iter 3: dev acc=0.2534; best=Iter0(0.2670)
iter 4: train loss/sent=1.5709, time=184.00s
iter 4: dev acc=0.2570; best=Iter0(0.2670)
iter 5: train loss/sent=1.5699, time=184.37s
iter 5: dev acc=0.2543; best=Iter0(0.2670)
iter 6: train loss/sent=1.5702, time=183.44s
iter 6: dev acc=0.2543; best=Iter0(0.2670)
iter 7: train loss/sent=1.5706, time=182.16s
iter 7: dev acc=0.2534; best=Iter0(0.2670)
iter 8: train loss/sent=1.5692, time=184.01s
iter 8: dev acc=0.2543; best=Iter0(0.2670)
iter 9: train loss/sent=1.5699, time=184.26s
iter 9: dev acc=0.2534; best=Iter0(0.2670)
iter 10: train loss/sent=1.5690, time=181.02s
iter 10: dev acc=0.2707; best=Iter10(0.2707)
iter 11: train loss/sent=1.5704, time=182.87s
iter 11: dev acc=0.2534; best=Iter10(0.2707)
iter 12: train loss/sent=1.5690, time=182.17s
iter 12: dev acc=0.2534; best=Iter10(0.2707)
iter 13: train loss/sent=1.5692, time=180.13s
iter 13: dev acc=0.2543; best=Iter10(0.2707)
iter 14: train loss/sent=1.5698, time=181.51s
iter 14: dev acc=0.2516; best=Iter10(0.2707)
iter 15: train loss/sent=1.5694, time=184.60s
iter 15: dev acc=0.2534; best=Iter10(0.2707)
iter 16: train loss/sent=1.5691, time=181.07s
iter 16: dev acc=0.2534; best=Iter10(0.2707)
iter 17: train loss/sent=1.5684, time=183.83s
iter 17: dev acc=0.2534; best=Iter10(0.2707)
iter 18: train loss/sent=1.5689, time=187.49s
iter 18: dev acc=0.2534; best=Iter10(0.2707)
iter 19: train loss/sent=1.5688, time=181.25s
iter 19: dev acc=0.2534; best=Iter10(0.2707)
iter None: dev acc=0.2707
iter None: test acc=0.2778
Use numpy!
RUN: {'train': 'data/sst-train.txt', 'dev': 'data/sst-dev.txt', 'test': 'data/sst-test.txt', 'emb_size': 64, 'hid_size': 64, 'hid_layer': 2, 'word_drop': 0.2, 'emb_drop': 0.333, 'hid_drop': 0.333, 'pooling_method': 'max', 'iters': 20, 'lrate': 0.01, 'lrate_decay': 1.0, 'mrate': 0.9, 'accu_step': 10, 'model': 'model18.npz', 'do_gradient_check': 0, 'dev_output': 'output.dev.txt', 'test_output': 'output.test.txt'}
iter 0: train loss/sent=1.5737, time=204.29s
iter 0: dev acc=0.2625; best=Iter0(0.2625)
iter 1: train loss/sent=1.5710, time=200.51s
iter 1: dev acc=0.2534; best=Iter0(0.2625)
iter 2: train loss/sent=1.5703, time=191.94s
iter 2: dev acc=0.2625; best=Iter0(0.2625)
iter 3: train loss/sent=1.5697, time=192.41s
iter 3: dev acc=0.2534; best=Iter0(0.2625)
iter 4: train loss/sent=1.5712, time=191.40s
iter 4: dev acc=0.2643; best=Iter4(0.2643)
iter 5: train loss/sent=1.5701, time=189.41s
iter 5: dev acc=0.2543; best=Iter4(0.2643)
iter 6: train loss/sent=1.5704, time=187.70s
iter 6: dev acc=0.2534; best=Iter4(0.2643)
iter 7: train loss/sent=1.5707, time=186.07s
iter 7: dev acc=0.2534; best=Iter4(0.2643)
iter 8: train loss/sent=1.5695, time=186.42s
iter 8: dev acc=0.2534; best=Iter4(0.2643)
iter 9: train loss/sent=1.5702, time=184.45s
iter 9: dev acc=0.2543; best=Iter4(0.2643)
iter 10: train loss/sent=1.5693, time=183.99s
iter 10: dev acc=0.2698; best=Iter10(0.2698)
iter 11: train loss/sent=1.5706, time=184.71s
iter 11: dev acc=0.2534; best=Iter10(0.2698)
iter 12: train loss/sent=1.5693, time=185.58s
iter 12: dev acc=0.2534; best=Iter10(0.2698)
iter 13: train loss/sent=1.5693, time=188.47s
iter 13: dev acc=0.2534; best=Iter10(0.2698)
iter 14: train loss/sent=1.5700, time=190.48s
iter 14: dev acc=0.2543; best=Iter10(0.2698)
iter 15: train loss/sent=1.5695, time=186.90s
iter 15: dev acc=0.2752; best=Iter15(0.2752)
iter 16: train loss/sent=1.5692, time=188.40s
iter 16: dev acc=0.2534; best=Iter15(0.2752)
iter 17: train loss/sent=1.5685, time=192.32s
iter 17: dev acc=0.2534; best=Iter15(0.2752)
iter 18: train loss/sent=1.5688, time=190.27s
iter 18: dev acc=0.2534; best=Iter15(0.2752)
iter 19: train loss/sent=1.5691, time=188.73s
iter 19: dev acc=0.2534; best=Iter15(0.2752)
iter None: dev acc=0.2752
iter None: test acc=0.2552
Use numpy!
RUN: {'train': 'data/sst-train.txt', 'dev': 'data/sst-dev.txt', 'test': 'data/sst-test.txt', 'emb_size': 64, 'hid_size': 64, 'hid_layer': 2, 'word_drop': 0.2, 'emb_drop': 0.333, 'hid_drop': 0.333, 'pooling_method': 'max', 'iters': 20, 'lrate': 0.01, 'lrate_decay': 1.0, 'mrate': 0.9, 'accu_step': 4, 'model': 'model16.npz', 'do_gradient_check': 0, 'dev_output': 'output.dev.txt', 'test_output': 'output.test.txt'}
iter 0: train loss/sent=1.5742, time=220.18s
iter 0: dev acc=0.2625; best=Iter0(0.2625)
iter 1: train loss/sent=1.5729, time=221.51s
iter 1: dev acc=0.2534; best=Iter0(0.2625)
iter 2: train loss/sent=1.5714, time=218.82s
iter 2: dev acc=0.2625; best=Iter0(0.2625)
iter 3: train loss/sent=1.5709, time=221.34s
iter 3: dev acc=0.2534; best=Iter0(0.2625)
iter 4: train loss/sent=1.5722, time=220.35s
iter 4: dev acc=0.2698; best=Iter4(0.2698)
iter 5: train loss/sent=1.5712, time=219.03s
iter 5: dev acc=0.2534; best=Iter4(0.2698)
iter 6: train loss/sent=1.5713, time=222.93s
iter 6: dev acc=0.2534; best=Iter4(0.2698)
iter 7: train loss/sent=1.5713, time=219.03s
iter 7: dev acc=0.2534; best=Iter4(0.2698)
iter 8: train loss/sent=1.5704, time=219.96s
iter 8: dev acc=0.2861; best=Iter8(0.2861)
iter 9: train loss/sent=1.5709, time=219.93s
iter 9: dev acc=0.2543; best=Iter8(0.2861)
iter 10: train loss/sent=1.5700, time=217.31s
iter 10: dev acc=0.2707; best=Iter8(0.2861)
iter 11: train loss/sent=1.5708, time=217.64s
iter 11: dev acc=0.2534; best=Iter8(0.2861)
iter 12: train loss/sent=1.5700, time=217.57s
iter 12: dev acc=0.2534; best=Iter8(0.2861)
iter 13: train loss/sent=1.5697, time=219.99s
iter 13: dev acc=0.2534; best=Iter8(0.2861)
iter 14: train loss/sent=1.5703, time=220.64s
iter 14: dev acc=0.2534; best=Iter8(0.2861)
iter 15: train loss/sent=1.5698, time=222.01s
iter 15: dev acc=0.2634; best=Iter8(0.2861)
iter 16: train loss/sent=1.5698, time=217.62s
iter 16: dev acc=0.2534; best=Iter8(0.2861)
iter 17: train loss/sent=1.5688, time=223.55s
iter 17: dev acc=0.2534; best=Iter8(0.2861)
iter 18: train loss/sent=1.5686, time=222.89s
iter 18: dev acc=0.2534; best=Iter8(0.2861)
iter 19: train loss/sent=1.5696, time=224.01s
iter 19: dev acc=0.2534; best=Iter8(0.2861)
iter None: dev acc=0.2861
iter None: test acc=0.2652
Use numpy!
RUN: {'train': 'data/sst-train.txt', 'dev': 'data/sst-dev.txt', 'test': 'data/sst-test.txt', 'emb_size': 64, 'hid_size': 64, 'hid_layer': 2, 'word_drop': 0.2, 'emb_drop': 0.333, 'hid_drop': 0.333, 'pooling_method': 'max', 'iters': 20, 'lrate': 0.015, 'lrate_decay': 1.0, 'mrate': 0.85, 'accu_step': 4, 'model': 'model19.npz', 'do_gradient_check': 0, 'dev_output': 'output.dev.txt', 'test_output': 'output.test.txt'}
iter 0: train loss/sent=1.5753, time=225.47s
iter 0: dev acc=0.2625; best=Iter0(0.2625)
iter 1: train loss/sent=1.5743, time=217.67s
iter 1: dev acc=0.2534; best=Iter0(0.2625)
iter 2: train loss/sent=1.5722, time=218.44s
iter 2: dev acc=0.2625; best=Iter0(0.2625)
iter 3: train loss/sent=1.5717, time=213.48s
iter 3: dev acc=0.2534; best=Iter0(0.2625)
iter 4: train loss/sent=1.5727, time=212.18s
iter 4: dev acc=0.2643; best=Iter4(0.2643)
iter 5: train loss/sent=1.5717, time=212.26s
iter 5: dev acc=0.2534; best=Iter4(0.2643)
iter 6: train loss/sent=1.5715, time=214.38s
iter 6: dev acc=0.2534; best=Iter4(0.2643)
iter 7: train loss/sent=1.5714, time=210.07s
iter 7: dev acc=0.2534; best=Iter4(0.2643)
iter 8: train loss/sent=1.5707, time=211.38s
iter 8: dev acc=0.2743; best=Iter8(0.2743)
iter 9: train loss/sent=1.5710, time=213.24s
iter 9: dev acc=0.2543; best=Iter8(0.2743)
iter 10: train loss/sent=1.5703, time=211.30s
iter 10: dev acc=0.2652; best=Iter8(0.2743)
iter 11: train loss/sent=1.5706, time=211.04s
iter 11: dev acc=0.2534; best=Iter8(0.2743)
iter 12: train loss/sent=1.5701, time=216.95s
iter 12: dev acc=0.2534; best=Iter8(0.2743)
iter 13: train loss/sent=1.5699, time=212.64s
iter 13: dev acc=0.2534; best=Iter8(0.2743)
iter 14: train loss/sent=1.5701, time=217.80s
iter 14: dev acc=0.2534; best=Iter8(0.2743)
iter 15: train loss/sent=1.5700, time=218.01s
iter 15: dev acc=0.2625; best=Iter8(0.2743)
iter 16: train loss/sent=1.5699, time=213.58s
iter 16: dev acc=0.2534; best=Iter8(0.2743)
iter 17: train loss/sent=1.5689, time=157.96s
iter 17: dev acc=0.2534; best=Iter8(0.2743)
iter 18: train loss/sent=1.5685, time=157.53s
iter 18: dev acc=0.2534; best=Iter8(0.2743)
iter 19: train loss/sent=1.5698, time=160.68s
iter 19: dev acc=0.2534; best=Iter8(0.2743)
iter None: dev acc=0.2743
iter None: test acc=0.2466
Use numpy!
RUN: {'train': 'data/sst-train.txt', 'dev': 'data/sst-dev.txt', 'test': 'data/sst-test.txt', 'emb_size': 64, 'hid_size': 64, 'hid_layer': 2, 'word_drop': 0.2, 'emb_drop': 0.333, 'hid_drop': 0.333, 'pooling_method': 'max', 'iters': 20, 'lrate': 0.01, 'lrate_decay': 1.0, 'mrate': 0.85, 'accu_step': 1, 'model': 'model14.npz', 'do_gradient_check': 0, 'dev_output': 'output.dev.txt', 'test_output': 'output.test.txt'}
iter 0: train loss/sent=1.5811, time=369.73s
iter 0: dev acc=0.2625; best=Iter0(0.2625)
iter 1: train loss/sent=1.5765, time=357.69s
iter 1: dev acc=0.2534; best=Iter0(0.2625)
iter 2: train loss/sent=1.5732, time=360.49s
iter 2: dev acc=0.2625; best=Iter0(0.2625)
iter 3: train loss/sent=1.5722, time=365.07s
iter 3: dev acc=0.2534; best=Iter0(0.2625)
iter 4: train loss/sent=1.5725, time=361.04s
iter 4: dev acc=0.2625; best=Iter0(0.2625)
iter 5: train loss/sent=1.5719, time=363.98s
iter 5: dev acc=0.2507; best=Iter0(0.2625)
iter 6: train loss/sent=1.5710, time=363.98s
iter 6: dev acc=0.2534; best=Iter0(0.2625)
iter 7: train loss/sent=1.5714, time=357.41s
iter 7: dev acc=0.2534; best=Iter0(0.2625)
iter 8: train loss/sent=1.5710, time=356.69s
iter 8: dev acc=0.2925; best=Iter8(0.2925)
iter 9: train loss/sent=1.5710, time=360.18s
iter 9: dev acc=0.2807; best=Iter8(0.2925)
iter 10: train loss/sent=1.5706, time=363.09s
iter 10: dev acc=0.2625; best=Iter8(0.2925)
iter 11: train loss/sent=1.5701, time=360.53s
iter 11: dev acc=0.2534; best=Iter8(0.2925)
iter 12: train loss/sent=1.5706, time=366.45s
iter 12: dev acc=0.2534; best=Iter8(0.2925)
iter 13: train loss/sent=1.5703, time=308.27s
iter 13: dev acc=0.2534; best=Iter8(0.2925)
iter 14: train loss/sent=1.5704, time=270.49s
iter 14: dev acc=0.2534; best=Iter8(0.2925)
iter 15: train loss/sent=1.5705, time=234.43s
iter 15: dev acc=0.2625; best=Iter8(0.2925)
iter 16: train loss/sent=1.5706, time=224.34s
iter 16: dev acc=0.2534; best=Iter8(0.2925)
iter 17: train loss/sent=1.5700, time=220.21s
iter 17: dev acc=0.2534; best=Iter8(0.2925)
iter 18: train loss/sent=1.5701, time=221.99s
iter 18: dev acc=0.2534; best=Iter8(0.2925)
iter 19: train loss/sent=1.5706, time=219.59s
iter 19: dev acc=0.2534; best=Iter8(0.2925)
iter None: dev acc=0.2925
iter None: test acc=0.2624
Use numpy!
RUN: {'train': 'data/sst-train.txt', 'dev': 'data/sst-dev.txt', 'test': 'data/sst-test.txt', 'emb_size': 64, 'hid_size': 64, 'hid_layer': 2, 'word_drop': 0.2, 'emb_drop': 0.333, 'hid_drop': 0.333, 'pooling_method': 'max', 'iters': 20, 'lrate': 0.02, 'lrate_decay': 1.0, 'mrate': 0.85, 'accu_step': 10, 'model': 'model23.npz', 'do_gradient_check': 0, 'dev_output': 'output.dev.txt', 'test_output': 'output.test.txt'}
iter 0: train loss/sent=1.5738, time=201.11s
iter 0: dev acc=0.2625; best=Iter0(0.2625)
iter 1: train loss/sent=1.5723, time=198.39s
iter 1: dev acc=0.2534; best=Iter0(0.2625)
iter 2: train loss/sent=1.5710, time=199.79s
iter 2: dev acc=0.2625; best=Iter0(0.2625)
iter 3: train loss/sent=1.5706, time=174.56s
iter 3: dev acc=0.2534; best=Iter0(0.2625)
iter 4: train loss/sent=1.5720, time=143.79s
iter 4: dev acc=0.2643; best=Iter4(0.2643)
iter 5: train loss/sent=1.5709, time=144.73s
iter 5: dev acc=0.2534; best=Iter4(0.2643)
iter 6: train loss/sent=1.5713, time=143.05s
iter 6: dev acc=0.2534; best=Iter4(0.2643)
iter 7: train loss/sent=1.5713, time=117.80s
iter 7: dev acc=0.2534; best=Iter4(0.2643)
iter 8: train loss/sent=1.5702, time=122.55s
iter 8: dev acc=0.2752; best=Iter8(0.2752)
iter 9: train loss/sent=1.5709, time=118.12s
iter 9: dev acc=0.2534; best=Iter8(0.2752)
iter 10: train loss/sent=1.5700, time=118.69s
iter 10: dev acc=0.2679; best=Iter8(0.2752)
iter 11: train loss/sent=1.5709, time=117.49s
iter 11: dev acc=0.2534; best=Iter8(0.2752)
iter 12: train loss/sent=1.5700, time=116.59s
iter 12: dev acc=0.2534; best=Iter8(0.2752)
iter 13: train loss/sent=1.5698, time=116.74s
iter 13: dev acc=0.2534; best=Iter8(0.2752)
iter 14: train loss/sent=1.5703, time=119.33s
iter 14: dev acc=0.2534; best=Iter8(0.2752)
iter 15: train loss/sent=1.5698, time=114.08s
iter 15: dev acc=0.2643; best=Iter8(0.2752)
iter 16: train loss/sent=1.5698, time=92.57s
iter 16: dev acc=0.2534; best=Iter8(0.2752)
iter 17: train loss/sent=1.5690, time=92.22s
iter 17: dev acc=0.2534; best=Iter8(0.2752)
iter 18: train loss/sent=1.5687, time=94.21s
iter 18: dev acc=0.2534; best=Iter8(0.2752)
iter 19: train loss/sent=1.5697, time=92.90s
iter 19: dev acc=0.2534; best=Iter8(0.2752)
iter None: dev acc=0.2752
iter None: test acc=0.2511
Use numpy!
RUN: {'train': 'data/sst-train.txt', 'dev': 'data/sst-dev.txt', 'test': 'data/sst-test.txt', 'emb_size': 64, 'hid_size': 64, 'hid_layer': 2, 'word_drop': 0.2, 'emb_drop': 0.333, 'hid_drop': 0.333, 'pooling_method': 'max', 'iters': 20, 'lrate': 0.02, 'lrate_decay': 1.0, 'mrate': 0.85, 'accu_step': 4, 'model': 'model21.npz', 'do_gradient_check': 0, 'dev_output': 'output.dev.txt', 'test_output': 'output.test.txt'}
iter 0: train loss/sent=1.5765, time=237.20s
iter 0: dev acc=0.2625; best=Iter0(0.2625)
iter 1: train loss/sent=1.5752, time=221.76s
iter 1: dev acc=0.2534; best=Iter0(0.2625)
iter 2: train loss/sent=1.5727, time=219.48s
iter 2: dev acc=0.2625; best=Iter0(0.2625)
iter 3: train loss/sent=1.5722, time=219.60s
iter 3: dev acc=0.2534; best=Iter0(0.2625)
iter 4: train loss/sent=1.5729, time=167.42s
iter 4: dev acc=0.2625; best=Iter0(0.2625)
iter 5: train loss/sent=1.5719, time=162.03s
iter 5: dev acc=0.2534; best=Iter0(0.2625)
iter 6: train loss/sent=1.5716, time=161.84s
iter 6: dev acc=0.2534; best=Iter0(0.2625)
iter 7: train loss/sent=1.5715, time=136.65s
iter 7: dev acc=0.2534; best=Iter0(0.2625)
iter 8: train loss/sent=1.5707, time=137.00s
iter 8: dev acc=0.2688; best=Iter8(0.2688)
iter 9: train loss/sent=1.5709, time=135.54s
iter 9: dev acc=0.2534; best=Iter8(0.2688)
iter 10: train loss/sent=1.5703, time=133.10s
iter 10: dev acc=0.2625; best=Iter8(0.2688)
iter 11: train loss/sent=1.5704, time=135.46s
iter 11: dev acc=0.2534; best=Iter8(0.2688)
iter 12: train loss/sent=1.5700, time=133.24s
iter 12: dev acc=0.2534; best=Iter8(0.2688)
iter 13: train loss/sent=1.5700, time=128.59s
iter 13: dev acc=0.2534; best=Iter8(0.2688)
iter 14: train loss/sent=1.5700, time=129.32s
iter 14: dev acc=0.2534; best=Iter8(0.2688)
iter 15: train loss/sent=1.5700, time=104.33s
iter 15: dev acc=0.2625; best=Iter8(0.2688)
iter 16: train loss/sent=1.5699, time=101.93s
iter 16: dev acc=0.2534; best=Iter8(0.2688)
iter 17: train loss/sent=1.5691, time=101.56s
iter 17: dev acc=0.2534; best=Iter8(0.2688)
iter 18: train loss/sent=1.5686, time=97.75s
iter 18: dev acc=0.2534; best=Iter8(0.2688)
iter 19: train loss/sent=1.5700, time=73.25s
iter 19: dev acc=0.2534; best=Iter8(0.2688)
iter None: dev acc=0.2688
iter None: test acc=0.2475
Use numpy!
RUN: {'train': 'data/sst-train.txt', 'dev': 'data/sst-dev.txt', 'test': 'data/sst-test.txt', 'emb_size': 64, 'hid_size': 64, 'hid_layer': 2, 'word_drop': 0.2, 'emb_drop': 0.333, 'hid_drop': 0.333, 'pooling_method': 'max', 'iters': 20, 'lrate': 0.02, 'lrate_decay': 1.0, 'mrate': 0.9, 'accu_step': 4, 'model': 'model22.npz', 'do_gradient_check': 0, 'dev_output': 'output.dev.txt', 'test_output': 'output.test.txt'}
iter 0: train loss/sent=1.5765, time=242.44s
iter 0: dev acc=0.2625; best=Iter0(0.2625)
iter 1: train loss/sent=1.5751, time=223.56s
iter 1: dev acc=0.2534; best=Iter0(0.2625)
iter 2: train loss/sent=1.5727, time=225.15s
iter 2: dev acc=0.2625; best=Iter0(0.2625)
iter 3: train loss/sent=1.5721, time=189.46s
iter 3: dev acc=0.2534; best=Iter0(0.2625)
iter 4: train loss/sent=1.5728, time=164.90s
iter 4: dev acc=0.2625; best=Iter0(0.2625)
iter 5: train loss/sent=1.5720, time=165.95s
iter 5: dev acc=0.2534; best=Iter0(0.2625)
iter 6: train loss/sent=1.5717, time=147.56s
iter 6: dev acc=0.2534; best=Iter0(0.2625)
iter 7: train loss/sent=1.5716, time=135.29s
iter 7: dev acc=0.2534; best=Iter0(0.2625)
iter 8: train loss/sent=1.5706, time=132.42s
iter 8: dev acc=0.2770; best=Iter8(0.2770)
iter 9: train loss/sent=1.5709, time=132.49s
iter 9: dev acc=0.2534; best=Iter8(0.2770)
iter 10: train loss/sent=1.5704, time=129.98s
iter 10: dev acc=0.2625; best=Iter8(0.2770)
iter 11: train loss/sent=1.5705, time=133.63s
iter 11: dev acc=0.2534; best=Iter8(0.2770)
iter 12: train loss/sent=1.5700, time=132.16s
iter 12: dev acc=0.2534; best=Iter8(0.2770)
iter 13: train loss/sent=1.5700, time=131.19s
iter 13: dev acc=0.2534; best=Iter8(0.2770)
iter 14: train loss/sent=1.5700, time=115.22s
iter 14: dev acc=0.2534; best=Iter8(0.2770)
iter 15: train loss/sent=1.5699, time=103.20s
iter 15: dev acc=0.2625; best=Iter8(0.2770)
iter 16: train loss/sent=1.5698, time=103.60s
iter 16: dev acc=0.2534; best=Iter8(0.2770)
iter 17: train loss/sent=1.5690, time=105.56s
iter 17: dev acc=0.2534; best=Iter8(0.2770)
iter 18: train loss/sent=1.5686, time=74.66s
iter 18: dev acc=0.2534; best=Iter8(0.2770)
iter 19: train loss/sent=1.5701, time=53.51s
iter 19: dev acc=0.2534; best=Iter8(0.2770)
iter None: dev acc=0.2770
iter None: test acc=0.2715
Use numpy!
RUN: {'train': 'data/sst-train.txt', 'dev': 'data/sst-dev.txt', 'test': 'data/sst-test.txt', 'emb_size': 64, 'hid_size': 64, 'hid_layer': 2, 'word_drop': 0.2, 'emb_drop': 0.333, 'hid_drop': 0.333, 'pooling_method': 'max', 'iters': 20, 'lrate': 0.02, 'lrate_decay': 1.0, 'mrate': 0.9, 'accu_step': 1, 'model': 'model20.npz', 'do_gradient_check': 0, 'dev_output': 'output.dev.txt', 'test_output': 'output.test.txt'}
iter 0: train loss/sent=1.5851, time=361.53s
iter 0: dev acc=0.2625; best=Iter0(0.2625)
iter 1: train loss/sent=1.5764, time=350.59s
iter 1: dev acc=0.2534; best=Iter0(0.2625)
iter 2: train loss/sent=1.5744, time=352.15s
iter 2: dev acc=0.2625; best=Iter0(0.2625)
iter 3: train loss/sent=1.5736, time=274.34s
iter 3: dev acc=0.2534; best=Iter0(0.2625)
iter 4: train loss/sent=1.5739, time=261.84s
iter 4: dev acc=0.2625; best=Iter0(0.2625)
iter 5: train loss/sent=1.5743, time=217.68s
iter 5: dev acc=0.2625; best=Iter0(0.2625)
iter 6: train loss/sent=1.5731, time=213.94s
iter 6: dev acc=0.2534; best=Iter0(0.2625)
iter 7: train loss/sent=1.5731, time=214.03s
iter 7: dev acc=0.2534; best=Iter0(0.2625)
iter 8: train loss/sent=1.5731, time=211.15s
iter 8: dev acc=0.2434; best=Iter0(0.2625)
iter 9: train loss/sent=1.5733, time=212.84s
iter 9: dev acc=0.2625; best=Iter0(0.2625)
iter 10: train loss/sent=1.5730, time=166.89s
iter 10: dev acc=0.2634; best=Iter10(0.2634)
iter 11: train loss/sent=1.5725, time=165.75s
iter 11: dev acc=0.2534; best=Iter10(0.2634)
iter 12: train loss/sent=1.5731, time=135.15s
iter 12: dev acc=0.2534; best=Iter10(0.2634)
iter 13: train loss/sent=1.5728, time=61.15s
iter 13: dev acc=0.2534; best=Iter10(0.2634)
iter 14: train loss/sent=1.5731, time=45.40s
iter 14: dev acc=0.2534; best=Iter10(0.2634)
iter 15: train loss/sent=1.5735, time=45.75s
iter 15: dev acc=0.2625; best=Iter10(0.2634)
iter 16: train loss/sent=1.5736, time=45.27s
iter 16: dev acc=0.2534; best=Iter10(0.2634)
iter 17: train loss/sent=1.5725, time=45.35s
iter 17: dev acc=0.2534; best=Iter10(0.2634)
iter 18: train loss/sent=1.5730, time=44.62s
iter 18: dev acc=0.2534; best=Iter10(0.2634)
iter 19: train loss/sent=1.5732, time=44.51s
iter 19: dev acc=0.2534; best=Iter10(0.2634)
iter None: dev acc=0.2634
iter None: test acc=0.2629
